name: CI/CD - ssok backend

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Build with Gradle
        if: ${{ hashFiles('**/gradlew') != '' }}
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
      - name: Build with Maven
        if: ${{ hashFiles('**/mvnw') != '' }}
        run: |
          chmod +x ./mvnw
          ./mvnw -B -DskipTests package

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: |
            **/build/libs/*.jar
            **/target/*.jar
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app
          path: app-dist

      - name: Pick JAR
        id: pick
        shell: bash
        run: |
          JAR_PATH=$(ls app-dist/**/*.jar app-dist/*.jar | head -n 1)
          [ -z "$JAR_PATH" ] && echo "No JAR found" && exit 1
          echo "jar_path=$JAR_PATH" >> $GITHUB_OUTPUT
          echo "Picked: $JAR_PATH"

      - name: Copy JAR to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: ${{ steps.pick.outputs.jar_path }}
          target: /home/ubuntu/app/releases/${{ github.sha }}.jar
          strip_components: 1

      - name: Restart service
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -e
            cd /home/ubuntu/app
            ln -sfn releases/${{ github.sha }}.jar current.jar
            sudo systemctl restart ${{ secrets.SERVICE_NAME }}
            # 헬스체크: Actuator 있으면 /actuator/health 권장
            for i in {1..30}; do
              code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/actuator/health || true)
              [ "$code" = "200" ] && echo "Health OK" && exit 0
              sleep 1
            done
            echo "Health check failed"
            journalctl -u ${{ secrets.SERVICE_NAME }} --no-pager -n 120
            exit 1
